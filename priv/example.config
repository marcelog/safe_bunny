[
{safe_bunny, [
  {concurrency_limits, [
    {safe_bunny_deliver, 50000, 0} % How many "deliveries" to spawn before going inline
  ]},
  {consumers, [mysql, redis, file, ets]}, % Enable these consumers
  {producers, [mysql, redis, file, ets]}, % Order matters
  {mq, [
    {workers, 1}, % Number of connections,
    {host, "127.0.0.1"},
    {port, 5671},
    {user, "guest"},
    {pass, "guest"},
    {vhost, "/"},
    {confirm_timeout, 1000},
    {reconnect_timeout, 5000},
    {ssl_options, [{verify_peer, verify_none}, {fail_if_no_peer_cert, false}]} % Optional. Can be 'none' or [ssl_option()]
  ]},
  {ets, [
    {name, safe_bunny_queue},
    {concurrent_deliveries, 100},
    {poll_intervals, [500, 1000, 2000, 4000, 10000, 60000]},
    {maximum_retries, 100}
  ]},
  {file, [
    {directory, "/tmp/safe_bunny_queue"},
    {concurrent_deliveries, 100},
    {poll_intervals, [500, 1000, 2000, 4000, 10000, 60000]},
    {maximum_retries, 100}
  ]},
  {redis, [
    {host, "127.0.0.1"},
    {port, 6379},
    {db, 0},
    {key_prefix, "safe_bunny"},
    {producer_connections, 1},
    {concurrent_deliveries, 100},
    {poll_intervals, [500, 1000, 2000, 4000, 10000, 60000]},
    {maximum_retries, 100}
  ]},
  {mysql, [
    {host, "127.0.0.1"},
    {port, 3306},
    {user, "root"},
    {pass, "pass"},
    {db, "safe_bunny_queue"},
    {table, "items"},
    {producer_connections, 1},
    {concurrent_deliveries, 100},
    {poll_intervals, [500, 1000, 2000, 4000, 10000, 60000]},
    {maximum_retries, 100}
  ]}
]},
{lager, [
  {colored, true},
  {handlers, [
    {lager_console_backend, [
      debug,
      {lager_default_formatter, [
        color, date, "T", time, " [", severity, "] ", module, ":", line, ":", function,
        " - ", message, "\e[0m\n"
      ]}
    ]}
  ]}
]}
].
